Specifications for Patch Master for Azure.

The is is a script that is used to patch Virtual Machines Hosted in Azure and 
Azure Connected Machines that use Azure Arc.

The script leverages the following Azure Powershell commands

https://learn.microsoft.com/en-us/powershell/module/az.compute/invoke-azvmpatchassessment?view=azps-14.1.0
Invoke-AzVMPatchAssessment
https://learn.microsoft.com/en-us/powershell/module/az.compute/invoke-azvminstallpatch?view=azps-14.1.0
Invoke-AzVMInstallPatch

https://learn.microsoft.com/en-us/powershell/module/az.connectedmachine/invoke-azconnectedassessmachinepatch?view=azps-14.1.0
Invoke-AzConnectedAssessMachinePatch
https://learn.microsoft.com/en-us/powershell/module/az.connectedmachine/install-azconnectedmachinepatch?view=azps-14.1.0
Install-AzConnectedMachinePatch

To check if patches are avalilbe for installation and to install avalible patches for 
both windows and linux Operating Systems.

The script supports updating a single server, updating servers provided 
in a csv in serial or parallel mode. 

The scripts default action is to carry out the assesment and the install of updates. 
Alternantively the script has parameters to carry out just an assement or an update.

logging Requirements:
- Log file default location C:\programfiles\GDMTT\Logs\<scriptname>-<date stamp>.logs
- Logging format : <Time Stamp> <Server Name> <Log record type Info|Warn|Error> <log message>
- the parameter LogFilePath provides the way users can change the location of thelog file.
- the the script start the user account running the account should be logged.
- the version of the AZ powershell module should be logged at startup
- error should be human readable. If its a powershell error then the human readable 
  should be first then the full error after it.
- all actions need to be logged.   



The script should be able to accept server details via the pipeline and 
return results via the pipline

